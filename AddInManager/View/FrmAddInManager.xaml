<Window
    x:Class="RevitAddinManager.View.FrmAddInManager"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:RevitAddinManager.View.Control"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:RevitAddinManager.Model"
    xmlns:viewModel="clr-namespace:RevitAddinManager.ViewModel"
    Title="Revit Add In Manager"
    Width="400"
    Height="600"
    MinWidth="400"
    MinHeight="400"
    d:DataContext="{d:DesignInstance viewModel:AddInManagerViewModel}"
    Icon="../Resources/dev.ico"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <!--  Load this specific theme because the Aero theme for CheckBox has issues.  -->
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="/PresentationFramework.Luna;component/themes/Luna.NormalColor.xaml"/>-->
                <ResourceDictionary Source="/PresentationFramework.Royale;V3.0.0.0;31bf3856ad364e35;component\themes\royale.normalcolor.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition />
            <RowDefinition Height="150" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="50" />
            </Grid.ColumnDefinitions>
            <TextBox
                Grid.Row="0"
                Margin="5,0,5,0"
                VerticalAlignment="Center"
                Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Resources>
                    <VisualBrush
                        x:Key="tbxText"
                        AlignmentX="Left"
                        Stretch="None"
                        TileMode="None">
                        <VisualBrush.Visual>
                            <TextBlock Foreground="DimGray" Text="Search..." />
                        </VisualBrush.Visual>
                    </VisualBrush>
                </TextBox.Resources>
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Setter Property="BorderBrush" Value="AliceBlue" />
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Background" Value="{StaticResource tbxText}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <Button
                Grid.Column="1"
                Margin="0,0,1,0"
                VerticalAlignment="Center"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                BorderBrush="SteelBlue"
                Command="{Binding HelpCommand}"
                Content="Help"
                ToolTip="Help" />
        </Grid>


        <Grid Grid.Row="1">
            <TabControl x:Name="TabControl" SelectedIndex="{Binding SelectedTab, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TabItem
                    x:Name="TabCommand"
                    FontSize="14"
                    Foreground="SteelBlue"
                    Header="Load Command"
                    IsSelected="{Binding IsTabCmdSelected}">
                    <control:ExtendedTreeView
                        x:Name="TreeViewCommand"
                        FontSize="12"
                        ItemsSource="{Binding CommandItems, Mode=TwoWay}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        SelectedItem_="{Binding SelectedCommandItem, Mode=TwoWay}">
                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding OpenLcAssemblyCommand}" Header="Open Location Assembly" />
                                <MenuItem Command="{Binding ExecuteAddinCommand}" Header="Run" />
                                <MenuItem Command="{Binding LoadCommand}" Header="Load" />
                                <MenuItem Command="{Binding RemoveCommand}" Header="Remove" />
                            </ContextMenu>
                        </TreeView.ContextMenu>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="viewModel:AddinModel" ItemsSource="{Binding Children, Mode=OneTime}">
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox
                                        VerticalAlignment="Center"
                                        Focusable="False"
                                        IsChecked="{Binding IsChecked}" />
                                    <ContentPresenter Margin="2,0" Content="{Binding Name, Mode=OneTime}" />
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="True" />
                                <Setter Property="IsSelected" Value="{Binding IsInitiallySelected, Mode=TwoWay}" />
                                <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
                                <Setter Property="control:VirtualToggleButton.IsVirtualToggleButton" Value="True" />
                                <Setter Property="control:VirtualToggleButton.IsChecked" Value="{Binding IsChecked}" />
                                <Setter Property="control:MouseDoubleClick.CommandParameter" Value="{Binding}" />
                                <Setter Property="control:MouseDoubleClick.Command" Value="{Binding Path=DataContext.ExecuteAddinCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </control:ExtendedTreeView>

                </TabItem>
                <TabItem
                    x:Name="TabApp"
                    FontSize="14"
                    Foreground="SteelBlue"
                    Header="Load App"
                    IsSelected="{Binding IsTabAppSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <Grid>
                        <control:ExtendedTreeView
                            x:Name="TreeViewApp"
                            Grid.ColumnSpan="2"
                            FontSize="12"
                            ItemsSource="{Binding ApplicationItems, Mode=TwoWay}"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            SelectedItem_="{Binding SelectedAppItem, Mode=TwoWay}">
                            <TreeView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding OpenLcAssemblyApp}" Header="Open Location Assembly" />
                                    <MenuItem Command="{Binding ExecuteAddinCommand}" Header="Run" />
                                    <MenuItem Command="{Binding LoadCommand}" Header="Load" />
                                    <MenuItem Command="{Binding RemoveCommand}" Header="Remove" />
                                </ContextMenu>
                            </TreeView.ContextMenu>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="viewModel:AddinModel" ItemsSource="{Binding Children, Mode=OneTime}">
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox
                                            VerticalAlignment="Center"
                                            Focusable="False"
                                            IsChecked="{Binding IsChecked}" />
                                        <ContentPresenter Margin="2,0" Content="{Binding Name, Mode=OneTime}" />
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsExpanded" Value="True" />
                                    <Setter Property="IsSelected" Value="{Binding IsInitiallySelected, Mode=TwoWay}" />
                                    <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
                                    <Setter Property="control:VirtualToggleButton.IsVirtualToggleButton" Value="True" />
                                    <Setter Property="control:VirtualToggleButton.IsChecked" Value="{Binding IsChecked}" />
                                    <Setter Property="control:MouseDoubleClick.CommandParameter" Value="{Binding}" />
                                    <Setter Property="control:MouseDoubleClick.Command" Value="{Binding Path=DataContext.ExecuteAddinApp, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" />
                                </Style>
                            </TreeView.ItemContainerStyle>
                        </control:ExtendedTreeView>
                    </Grid>
                </TabItem>
                <TabItem
                    x:Name="tabStartUp"
                    FontSize="14"
                    Foreground="SteelBlue"
                    Header="Load StartUp"
                    IsEnabled="True"
                    IsSelected="{Binding IsTabStartSelected}">
                    <Grid>
                        <DataGrid
                            x:Name="DataGridStartup"
                            AlternatingRowBackground="Transparent"
                            AlternationCount="2"
                            AutoGenerateColumns="False"
                            CanUserAddRows="False"
                            CanUserSortColumns="True"
                            ClipboardCopyMode="IncludeHeader"
                            ColumnWidth="*"
                            IsReadOnly="False"
                            ItemsSource="{Binding AddInStartUps, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectionMode="Extended"
                            VerticalScrollBarVisibility="Auto">
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding OpenLocalAddinCommand}" Header="Open Location Addin" />
                                    <MenuItem Command="{Binding EditAddinCommand}" Header="Edit Addin" />
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                            <DataGrid.Resources>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                                <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                                <Condition Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="80" Header="State">
                                    <DataGridTemplateColumn.HeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTemplateColumn.HeaderStyle>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="model:RevitAddin">
                                            <Button
                                                Height="25"
                                                ToolTip="Toggle To Convert State"
                                                HorizontalContentAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                IsEnabled="{Binding IsReadOnly}"
                                                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.VisibleToggle}"
                                                Content="{Binding State}"
                                                FontSize="10" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn
                                    Width="0.6*"
                                    Binding="{Binding NameNotEx}"
                                    Header="Name" />
                                <DataGridTextColumn
                                    Width="*"
                                    Binding="{Binding FilePath}"
                                    Header="Full Path" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <StackPanel
                Grid.Column="0"
                VerticalAlignment="Center"
                Orientation="Vertical">
                <GroupBox Margin="1,1,1,1" Header="Vendor Description:">
                    <TextBox
                        x:Name="TbxDescription"
                        Width="Auto"
                        Height="90"
                        Margin="1,1,1,1"
                        LostKeyboardFocus="TbxDescription_OnLostKeyboardFocus"
                        Text="{Binding VendorDescription, Mode=Default, UpdateSourceTrigger=PropertyChanged}"
                        TextWrapping="Wrap"
                        ToolTip="Default Autodesk, www.autodesk.com" />
                </GroupBox>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="0.5*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                        <RadioButton
                            Margin="5,0,5,0"
                            VerticalAlignment="Center"
                            Content="All Version"
                            Foreground="SteelBlue"
                            IsEnabled="True"
                            ToolTip="Available Command or Application Addin For All Version" />
                        <RadioButton
                            Margin="5,0,5,0"
                            VerticalAlignment="Center"
                            Content="Current Version"
                            Foreground="SteelBlue"
                            IsChecked="{Binding IsCurrentVersion}"
                            ToolTip="Only Available for Revit Version Current" />
                    </StackPanel>
                    <StackPanel
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                        <Button
                            Width="Auto"
                            Command="{Binding SaveCommand}"
                            Content="Save Add-in"
                            Foreground="SteelBlue"
                            ToolTip="Save Add-in And Auto Load" />
                        <Button
                            Width="20"
                            Command="{Binding ExploreCommand}"
                            Foreground="SteelBlue"
                            ToolTip="Open Explore Location External Command Saved">
                            <Button.Background>
                                <ImageBrush
                                    AlignmentX="Center"
                                    AlignmentY="Bottom"
                                    ImageSource="../Resources/folder.png" />
                            </Button.Background>
                        </Button>
                    </StackPanel>
                </Grid>
            </StackPanel>
            <StackPanel
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Orientation="Vertical">

                <Button
                    Width="80"
                    Margin="1,5,1,1"
                    Command="{Binding LoadCommand}"
                    Content="Load"
                    Foreground="SteelBlue"
                    ToolTip="Load A Dll Of Command Or Application To Run" />
                <Button
                    Width="80"
                    Margin="1,5,1,1"
                    Command="{Binding RemoveCommand}"
                    Content="Remove"
                    Foreground="SteelBlue"
                    ToolTip="Remove A Command Or Application Loaded" />
                <Button
                    Width="80"
                    Margin="1,5,0,0"
                    Command="{Binding ManagerCommand}"
                    Content="Startup"
                    Foreground="SteelBlue"
                    ToolTip="Manager List Add-in Loaded In Revit" />
                <Button
                    Margin="1,5,0,5"
                    Command="{Binding ClearCommand}"
                    Content="Clear"
                    Foreground="SteelBlue"
                    ToolTip="Remove Cache In Temp Folder(Require Tune Off Revit)" />
            </StackPanel>

        </Grid>
        <StackPanel Grid.Row="3">
            <Button
                Margin="1,1,1,1"
                Command="{Binding ExecuteAddinCommand}"
                Content="Run"
                IsEnabled="{Binding IsCanRun,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                Foreground="SteelBlue"
                ToolTip="Execute Addin Selected" />
        </StackPanel>
    </Grid>
</Window>
