<Window x:Class="RevitElementBipChecker.View.FrmCompareBip"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodel="clr-namespace:RevitElementBipChecker.Viewmodel"
        mc:Ignorable="d"
        FocusManager.FocusedElement="{Binding ElementName=tbxSearch}"
        d:DataContext="{d:DesignInstance viewmodel:CompareBipViewModel}"
        Title="Mini Compare Two Element" Height="600" Width="450">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
            <RowDefinition Height="35" />
        </Grid.RowDefinitions>
        <TextBox
            Grid.Column="0"
            Grid.Row="0"
            Margin="2,2,2,2"
            Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            x:Name="tbxSearch">
            <TextBox.Resources>
                <VisualBrush
                    AlignmentX="Left"
                    AlignmentY="Center"
                    Stretch="None"
                    TileMode="None"
                    x:Key="tbxText">
                    <VisualBrush.Visual>
                        <Grid Background="Transparent">
                            <TextBlock
                                Foreground="DimGray"
                                Margin="5,0"
                                Text="Search Filter By Parameter Name" />
                        </Grid>
                    </VisualBrush.Visual>
                </VisualBrush>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </TextBox.Resources>
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="BorderBrush" Value="#FFAFAFAF" />
                    <Setter Property="BorderThickness" Value="0.5" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Margin" Value="5,5,0,5" />
                    <Style.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Background" Value="{StaticResource tbxText}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <DataGrid
            x:Name="dataGrid"
            Grid.Row="1"
            Background="WhiteSmoke"
            AlternationCount="2"
            IsReadOnly="True"
            ItemsSource="{Binding Differences}"
            AutoGenerateColumns="False">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{Binding RowColor}" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Width="100" Binding="{Binding Name}" Header="Parameter Name" />
                <DataGridTextColumn Width="90" Binding="{Binding GroupName}" Header="GroupName" />
                <DataGridTextColumn Width="60" Binding="{Binding TypeOrInstance}" Header="TypeOrInstance" />
                <!-- <DataGridTextColumn Binding="{Binding BuiltInParameter}" Header="BuiltInParameter" /> -->
                <DataGridTextColumn Width="70" Binding="{Binding Type}" Header="Type" />
                <!-- <DataGridTextColumn Binding="{Binding Unit}" Header="Unit" /> -->
                <!-- <DataGridTextColumn Binding="{Binding ReadWrite}" Header="ReadWrite" /> -->
                <!-- <DataGridTextColumn Binding="{Binding Shared}" Header="Shared" /> -->
                <DataGridTextColumn Width="*" Header="Value Element1" Binding="{Binding Value1}" />
                <DataGridTextColumn Width="*" Header="Value Element2" Binding="{Binding Value2}" />
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Command="{Binding SelectElement1Command}"
                        Header="Select Element1" />
                    <MenuItem
                        Command="{Binding SelectElement2Command}"
                        Header="Select Element2" />
                    <MenuItem
                        Command="{Binding SnoopCommand}"
                        Header="Snoop Elements" />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
        <Grid Grid.Row="2" Margin="2,2,2,2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50" />
                <ColumnDefinition />
                <ColumnDefinition Width="50" />
            </Grid.ColumnDefinitions>
            <Button Content="Toggle"
                    Margin="1,1,1,1"
                    Background="WhiteSmoke"
                    ToolTip="Toggle to check different parameters between two elements invert"
                    Command="{Binding ToggleCommand}">
            </Button>
            <Button IsCancel="True"
                    Background="WhiteSmoke"
                    Margin="1,1,1,1"
                    Command="{Binding CloseCommand}" Grid.Column="1" Grid.Row="0" Content="Close">
            </Button>
            <Button Margin="1,1,1,1" 
                    Background="WhiteSmoke"
                    Command="{Binding ExportCommand}"
                    Grid.Column="2" 
                    Content="Export"></Button>
        </Grid>

    </Grid>
</Window>